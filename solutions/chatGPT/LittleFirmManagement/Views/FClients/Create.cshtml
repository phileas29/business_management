@model LittleFirmManagement.Models.FClient

<div class="container">
    <form asp-action="Create" method="post">
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        <div class="row">
            <div class="col-md-4">
                <div class="card">
                    <div class="card-header">Identity</div>
                    <div class="card-body">
                        <div class="mb-3">
                            <label asp-for="CName" class="form-label"></label>
                            <input asp-for="CName" class="form-control" />
                            <span asp-validation-for="CName" class="text-danger"></span>
                        </div>
                        <div class="mb-3">
                            <label asp-for="CFirstname" class="form-label"></label>
                            <input asp-for="CFirstname" class="form-control" />
                            <span asp-validation-for="CFirstname" class="text-danger"></span>
                        </div>
                        <div class="mb-3">
                            <label asp-for="CEmail" class="form-label"></label>
                            <input asp-for="CEmail" class="form-control" />
                            <span asp-validation-for="CEmail" class="text-danger"></span>
                        </div>
                        <div class="mb-3">
                            <label asp-for="CPhoneFixed" class="form-label"></label>
                            <input asp-for="CPhoneFixed" class="form-control" />
                            <span asp-validation-for="CPhoneFixed" class="text-danger"></span>
                        </div>
                        <div class="mb-3">
                            <label asp-for="CPhoneCell" class="form-label"></label>
                            <input asp-for="CPhoneCell" class="form-control" />
                            <span asp-validation-for="CPhoneCell" class="text-danger"></span>
                        </div>
                        <div class="mb-3">
                            <label asp-for="CFkMediaId" class="form-label"></label>
                            <select asp-for="CFkMediaId" class="form-control" asp-items="ViewBag.CFkMediaId"></select>
                        </div>
                        <div class="card mt-3">
                            <div class="card-header">
                                <div class="form-check form-switch">
                                    <label class="form-check-label" for="flexSwitchCheckDefault">Register in the Urssaf api ?</label>
                                    <input class="form-check-input" data-bs-toggle="collapse" type="checkbox" role="switch" id="enableUrssafPayment" href="#collapseCard">
                                </div>
                            </div>
                            <div class="collapse" id="collapseCard">
                                <div class="card-body">
                                    <div class="mb-3">
                                        <label asp-for="IsMan" class="form-label">Is Man?</label>
                                        <input type="checkbox" class="form-check-input" asp-for="IsMan">
                                    </div>
                                    <div class="mb-3">
                                        <label asp-for="CBirthDate" class="form-label">Birth Date</label>
                                        <input type="date" class="form-control" asp-for="CBirthDate">
                                        <span asp-validation-for="CBirthDate" class="text-danger"></span>
                                    </div>
                                    <div class="mb-3">
                                        <label asp-for="CBirthName" class="form-label">Birth Name</label>
                                        <input type="text" class="form-control" asp-for="CBirthName">
                                        <span asp-validation-for="CBirthName" class="text-danger"></span>
                                    </div>
                                    <div class="mb-3">
                                        <label for="birthCityInput" class="form-label">Birth City</label>
                                        <input type="text" class="form-control" id="birthCityInput" name="birthCity" placeholder="Enter birth city" autocomplete="off" />
                                        <div class="dropdown">
                                            <ul id="birthCitySuggestions" class="dropdown-menu" style="display: none;"></ul>
                                        </div>
                                    </div>
                                    <div class="mb-3">
                                        <label asp-for="CAccountHolder" class="form-label">Account Holder</label>
                                        <input type="text" class="form-control" asp-for="CAccountHolder">
                                        <span asp-validation-for="CAccountHolder" class="text-danger"></span>
                                    </div>
                                    <div class="mb-3">
                                        <label asp-for="CIban" class="form-label">IBAN</label>
                                        <input type="text" class="form-control" asp-for="CIban">
                                        <span asp-validation-for="CIban" class="text-danger"></span>
                                    </div>
                                    <div class="mb-3">
                                        <label asp-for="CBic" class="form-label">BIC</label>
                                        <input type="text" class="form-control" asp-for="CBic">
                                        <span asp-validation-for="CBic" class="text-danger"></span>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="col-md-4">
                <div class="card">
                    <div class="card-header">Location</div>
                    <div class="card-body">
                        <div class="mb-3">
                            <label for="town" class="form-label">Town</label>
                            <input for="town" class="form-control" name="Town" placeholder="Enter town name" id="town"></input>
                        </div>
                        <div class="mb-3">
                            <label asp-for="CAddress" class="form-label"></label>
                            <input asp-for="CAddress" class="form-control" id="address" />
                            <span asp-validation-for="CAddress" class="text-danger"></span>
                        </div>
                        <div class="mb-3">
                            <label asp-for="CLocationLong" class="form-label"></label>
                            <input asp-for="CLocationLong" class="form-control" id="lon" />
                            <span asp-validation-for="CLocationLong" class="text-danger"></span>
                        </div>
                        <div class="mb-3">
                            <label asp-for="CLocationLat" class="form-label"></label>
                            <input asp-for="CLocationLat" class="form-control" id="lat" />
                            <span asp-validation-for="CLocationLat" class="text-danger"></span>
                        </div>
                        <div id="map" style="height: 400px;" class="mb-3"></div>
                        <button type="button" class="btn btn-danger" id="clear">Clear Map</button>
                    </div>
                </div>
            </div>

            <div class="col-md-4 d-flex flex-column align-items-end">
                <input type="submit" value="Save and record an intervention" class="btn btn-primary mb-4" />
                <input type="submit" value="Save and exit" class="btn btn-primary mb-4" />
                <a asp-controller="Home" asp-action="Index" class="btn btn-secondary">Cancel</a>
            </div>
        </div>
    </form>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

    <script src="https://cdn.jsdelivr.net/npm/leaflet@1.7.1/dist/leaflet.js"></script>

    <!-- Leaflet CSS -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/leaflet.min.css" crossorigin="anonymous" referrerpolicy="no-referrer" />

    <!-- Leaflet JavaScript -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/leaflet.min.js" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
    <script>
        var map = L.map('map').setView([47.9384, -4.0234], 11);

        map.on('click', onMapClick);

        L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
            attribution: 'Map data &copy; <a href="https://www.openstreetmap.org/">OpenStreetMap</a> contributors',
            maxZoom: 18,
        }).addTo(map);

        var redIcon = L.icon({
            iconUrl: 'https://cdn.rawgit.com/pointhi/leaflet-color-markers/master/img/marker-icon-red.png',
            iconSize: [25, 41],
            iconAnchor: [12, 41],
            popupAnchor: [1, -34],
            tooltipAnchor: [16, -28],
            shadowSize: [41, 41]
        });

        var marker = L.marker([51.505, -0.09], { icon: redIcon }).addTo(map);

        function updateMarker(lat, lng) {
            marker.setLatLng([lat, lng], { icon: redIcon });
            map.setView([lat, lng]);
        }

        function onMapClick(e) {
            // Reverse geocode the clicked location to get an address
            var xhr = new XMLHttpRequest();
            xhr.open("GET", "https://nominatim.openstreetmap.org/reverse?format=jsonv2&lat=" + e.latlng.lat + "&lon=" + e.latlng.lng, true);
            xhr.onreadystatechange = function () {
                if (xhr.readyState === 4 && xhr.status === 200) {
                    var data = JSON.parse(xhr.responseText);
                    if (data.address != null) {
                        var address = data.address.house_number + " " + data.address.road;
                        document.getElementById("address").value = address;
                        document.getElementById("lat").value = e.latlng.lat;
                        document.getElementById("lon").value = e.latlng.lng;
                        document.getElementById("town").value = data.address.town || data.address.city || data.address.village || "";
                    }
                }
            };
            xhr.send();
            updateMarker(e.latlng.lat, e.latlng.lng);
        }

        var clearButton = document.getElementById("clear");
        clearButton.addEventListener("click", function () {
            marker.setLatLng([51.505, -0.09]);
            document.getElementById("address").value = "";
            document.getElementById("town").value = "";
            document.getElementById("lat").value = "";
            document.getElementById("lon").value = "";
        });

        document.addEventListener('DOMContentLoaded', function () {
            var birthCityInput = document.getElementById('birthCityInput');
            var birthCitySuggestions = document.getElementById('birthCitySuggestions');

            birthCityInput.addEventListener('input', function () {
                var input = birthCityInput.value;
                if (input.length >= 2) {
                    var xhr = new XMLHttpRequest();
                    xhr.open('GET', '/FClients/GetMatchingCities?input=' + encodeURIComponent(input));
                    xhr.onload = function () {
                        if (xhr.status === 200) {
                            var response = JSON.parse(xhr.responseText);
                            birthCitySuggestions.innerHTML = '';
                            response.forEach(function (city) {
                                var suggestion = document.createElement('li');
                                suggestion.className = 'dropdown-item';
                                suggestion.textContent = city.nom;
                                suggestion.addEventListener('click', function () {
                                    birthCityInput.value = city.nom;
                                    birthCitySuggestions.style.display = 'none';
                                });
                                birthCitySuggestions.appendChild(suggestion);
                            });
                            birthCitySuggestions.style.display = 'block';
                        }
                    };
                    xhr.send();
                } else {
                    birthCitySuggestions.innerHTML = '';
                    birthCitySuggestions.style.display = 'none';
                }
            });
        });


        // Assuming you have a switch input with the id "enableUrssafPayment"
        const enableUrssafPaymentSwitch = document.getElementById("enableUrssafPayment");
        const accountHolderInput = document.getElementById("CAccountHolder");
        const firstnameInput = document.getElementById("CFirstname");
        const nameInput = document.getElementById("CName");

        // Add an event listener to the switch input
        enableUrssafPaymentSwitch.addEventListener("change", function () {
            if (this.checked) {
                // When the switch is checked (on)
                // Concatenate the firstname and name inputs and set it as the value of accountHolder
                accountHolderInput.value = firstnameInput.value + " " + nameInput.value;
            } else {
                // When the switch is unchecked (off)
                // Reset the value of accountHolder to an empty string
                accountHolderInput.value = "";
            }
        });
    </script>
}
